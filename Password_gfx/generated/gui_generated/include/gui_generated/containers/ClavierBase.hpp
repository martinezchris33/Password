/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CLAVIERBASE_HPP
#define CLAVIERBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <gui/containers/keyboardLetterCustomContainerFR.hpp>
#include <gui/containers/keyboardLetterCustomContainer.hpp>

class ClavierBase : public touchgfx::Container
{
public:
    ClavierBase();
    virtual ~ClavierBase();
    virtual void initialize();

    /*
     * Custom Trigger Callback Setters
     */
    void setClavierCharCallback(touchgfx::GenericCallback<char>& callback)
    {
        this->clavierCharCallback = &callback;
    }

    /*
     * Custom Actions
     */
    virtual void language(int8_t value);

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitClavierCharCallback(char value)
    {
        if (clavierCharCallback && clavierCharCallback->isValid())
        {
            this->clavierCharCallback->execute( value);
        }
    }

    /*
     * Member Declarations
     */
    keyboardLetterCustomContainerFR clavierFR;
    keyboardLetterCustomContainer clavierUK;

private:

    /*
     * Custom Trigger Callback Declarations
     */
    touchgfx::GenericCallback<char>* clavierCharCallback;

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ClavierBase, char> clavierUKCharValueLetterCallback;
    touchgfx::Callback<ClavierBase, char> clavierFRCharValueLetterCallback;

    /*
     * Callback Handler Declarations
     */
    void clavierUKCharValueLetterCallbackHandler(char value);
    void clavierFRCharValueLetterCallbackHandler(char value);

};

#endif // CLAVIERBASE_HPP
