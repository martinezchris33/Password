/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef KEYBOARDBUTTONLANGUAGEBASE_HPP
#define KEYBOARDBUTTONLANGUAGEBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/containers/ScrollableContainer.hpp>
#include <touchgfx/containers/ListLayout.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>

class keyboardButtonLanguageBase : public touchgfx::Container
{
public:
    keyboardButtonLanguageBase();
    virtual ~keyboardButtonLanguageBase();
    virtual void initialize();

    /*
     * Custom Trigger Callback Setters
     */
    void setLanguageCallback(touchgfx::GenericCallback<int8_t>& callback)
    {
        this->languageCallback = &callback;
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitLanguageCallback(int8_t value)
    {
        if (languageCallback && languageCallback->isValid())
        {
            this->languageCallback->execute( value);
        }
    }

    /*
     * Member Declarations
     */
    touchgfx::ScrollableContainer scrollableLanguageContainer;
    touchgfx::ListLayout listeLanguage;
    touchgfx::TextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  FrButton;
    touchgfx::TextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  UkButton;
    touchgfx::TextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  OtherButton;
    touchgfx::ToggleButton ButtonLanguage;

private:

    /*
     * Custom Trigger Callback Declarations
     */
    touchgfx::GenericCallback<int8_t>* languageCallback;

    /*
     * Callback Declarations
     */
    touchgfx::Callback<keyboardButtonLanguageBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<keyboardButtonLanguageBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // KEYBOARDBUTTONLANGUAGEBASE_HPP
