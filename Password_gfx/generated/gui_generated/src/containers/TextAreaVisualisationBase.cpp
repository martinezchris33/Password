/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/TextAreaVisualisationBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

TextAreaVisualisationBase::TextAreaVisualisationBase() :
    bufferTextCallback(0),
    buttonCallback(this, &TextAreaVisualisationBase::buttonCallbackHandler)
{
    setWidth(250);
    setHeight(80);
    fond.setPosition(0, 0, 250, 80);
    fond.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(fond);

    textArea1.setXY(0, 0);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1Buffer[0] = 0;
    textArea1.setWildcard(textArea1Buffer);
    textArea1.resizeToCurrentText();
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4ZFF));
    add(textArea1);

    visibleButton.setXY(215, 54);
    visibleButton.setBitmaps(touchgfx::Bitmap(BITMAP_BASIC_EYE_ID), touchgfx::Bitmap(BITMAP_BASIC_EYE_CLOSED_ID));
    visibleButton.setAction(buttonCallback);
    add(visibleButton);
}

TextAreaVisualisationBase::~TextAreaVisualisationBase()
{

}

void TextAreaVisualisationBase::initialize()
{

}

void TextAreaVisualisationBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &visibleButton)
    {
        //makOrNot
        //When visibleButton clicked call visualizationText on TextAreaVisualisation
        //Call visualizationText
        visualizationText();
    }
}
