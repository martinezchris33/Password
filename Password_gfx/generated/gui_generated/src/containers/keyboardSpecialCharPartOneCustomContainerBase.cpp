/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/keyboardSpecialCharPartOneCustomContainerBase.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

keyboardSpecialCharPartOneCustomContainerBase::keyboardSpecialCharPartOneCustomContainerBase() :
    valueSpecialCharPartOneCallback(0),
    flexButtonCallback(this, &keyboardSpecialCharPartOneCustomContainerBase::flexButtonCallbackHandler)
{
    setWidth(288);
    setHeight(126);
    dashFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    dashFlexButton.setBitmapXY(0, 0);
    dashFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_ENDASH));
    dashFlexButton.setTextPosition(0, 7, 25, 35);
    dashFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    dashFlexButton.setAction(flexButtonCallback);
    dashFlexButton.setPosition(15, 46, 25, 35);
    add(dashFlexButton);

    slachFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    slachFlexButton.setBitmapXY(0, 0);
    slachFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_SLASH));
    slachFlexButton.setTextPosition(0, 7, 25, 35);
    slachFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    slachFlexButton.setAction(flexButtonCallback);
    slachFlexButton.setPosition(41, 46, 25, 35);
    add(slachFlexButton);

    colonFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    colonFlexButton.setBitmapXY(0, 0);
    colonFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_COLON));
    colonFlexButton.setTextPosition(0, 7, 25, 35);
    colonFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    colonFlexButton.setAction(flexButtonCallback);
    colonFlexButton.setPosition(67, 46, 25, 35);
    add(colonFlexButton);

    semicolonFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    semicolonFlexButton.setBitmapXY(0, 0);
    semicolonFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_SEMICOLON));
    semicolonFlexButton.setTextPosition(0, 7, 25, 35);
    semicolonFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    semicolonFlexButton.setAction(flexButtonCallback);
    semicolonFlexButton.setPosition(93, 46, 25, 35);
    add(semicolonFlexButton);

    bracket1FlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    bracket1FlexButton.setBitmapXY(0, 0);
    bracket1FlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_PARENTHESESL));
    bracket1FlexButton.setTextPosition(0, 7, 25, 35);
    bracket1FlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    bracket1FlexButton.setAction(flexButtonCallback);
    bracket1FlexButton.setPosition(119, 46, 25, 35);
    add(bracket1FlexButton);

    bracket2FlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    bracket2FlexButton.setBitmapXY(0, 0);
    bracket2FlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_PARENTHESESR));
    bracket2FlexButton.setTextPosition(0, 7, 25, 35);
    bracket2FlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    bracket2FlexButton.setAction(flexButtonCallback);
    bracket2FlexButton.setPosition(145, 46, 25, 35);
    add(bracket2FlexButton);

    dollardFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    dollardFlexButton.setBitmapXY(0, 0);
    dollardFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_DOLLARD));
    dollardFlexButton.setTextPosition(0, 7, 25, 35);
    dollardFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    dollardFlexButton.setAction(flexButtonCallback);
    dollardFlexButton.setPosition(171, 46, 25, 35);
    add(dollardFlexButton);

    andFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    andFlexButton.setBitmapXY(0, 0);
    andFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_ANDPERSAND));
    andFlexButton.setTextPosition(0, 7, 25, 35);
    andFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    andFlexButton.setAction(flexButtonCallback);
    andFlexButton.setPosition(197, 46, 25, 35);
    add(andFlexButton);

    atFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    atFlexButton.setBitmapXY(0, 0);
    atFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_AT));
    atFlexButton.setTextPosition(0, 7, 25, 35);
    atFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    atFlexButton.setAction(flexButtonCallback);
    atFlexButton.setPosition(223, 46, 25, 35);
    add(atFlexButton);

    periodFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    periodFlexButton.setBitmapXY(0, 0);
    periodFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_PERIOD2));
    periodFlexButton.setTextPosition(0, 7, 25, 35);
    periodFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    periodFlexButton.setAction(flexButtonCallback);
    periodFlexButton.setPosition(107, 82, 25, 35);
    add(periodFlexButton);

    commaFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    commaFlexButton.setBitmapXY(0, 0);
    commaFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_COMMA2));
    commaFlexButton.setTextPosition(0, 7, 25, 35);
    commaFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    commaFlexButton.setAction(flexButtonCallback);
    commaFlexButton.setPosition(133, 82, 25, 35);
    add(commaFlexButton);

    questionFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    questionFlexButton.setBitmapXY(0, 0);
    questionFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_QUESTION2));
    questionFlexButton.setTextPosition(0, 7, 25, 35);
    questionFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    questionFlexButton.setAction(flexButtonCallback);
    questionFlexButton.setPosition(159, 82, 25, 35);
    add(questionFlexButton);

    exclammationFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    exclammationFlexButton.setBitmapXY(0, 0);
    exclammationFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_EXCLAMATION2));
    exclammationFlexButton.setTextPosition(0, 7, 25, 35);
    exclammationFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    exclammationFlexButton.setAction(flexButtonCallback);
    exclammationFlexButton.setPosition(185, 82, 25, 35);
    add(exclammationFlexButton);

    apostrophyFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    apostrophyFlexButton.setBitmapXY(0, 0);
    apostrophyFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_APOSTROPHE2));
    apostrophyFlexButton.setTextPosition(0, 7, 25, 35);
    apostrophyFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    apostrophyFlexButton.setAction(flexButtonCallback);
    apostrophyFlexButton.setPosition(211, 82, 25, 35);
    add(apostrophyFlexButton);

    quotationmarkFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    quotationmarkFlexButton.setBitmapXY(0, 0);
    quotationmarkFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_QUOTATION));
    quotationmarkFlexButton.setTextPosition(0, 7, 25, 35);
    quotationmarkFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    quotationmarkFlexButton.setAction(flexButtonCallback);
    quotationmarkFlexButton.setPosition(249, 46, 25, 35);
    add(quotationmarkFlexButton);
}

keyboardSpecialCharPartOneCustomContainerBase::~keyboardSpecialCharPartOneCustomContainerBase()
{

}

void keyboardSpecialCharPartOneCustomContainerBase::initialize()
{

}

void keyboardSpecialCharPartOneCustomContainerBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &quotationmarkFlexButton)
    {
        //getCharQuotationmark
        //When quotationmarkFlexButton clicked emit valueSpecialCharPartOne callback
        //Emit callback
        emitValueSpecialCharPartOneCallback(34);
    }
    if (&src == &atFlexButton)
    {
        //getCharAT
        //When atFlexButton clicked emit valueSpecialCharPartOne callback
        //Emit callback
        emitValueSpecialCharPartOneCallback('@');
    }
    if (&src == &andFlexButton)
    {
        //getCharAnd
        //When andFlexButton clicked emit valueSpecialCharPartOne callback
        //Emit callback
        emitValueSpecialCharPartOneCallback('&');
    }
    if (&src == &dollardFlexButton)
    {
        //getCharDollard
        //When dollardFlexButton clicked emit valueSpecialCharPartOne callback
        //Emit callback
        emitValueSpecialCharPartOneCallback('$');
    }
    if (&src == &bracket2FlexButton)
    {
        //getCharBracket2
        //When bracket2FlexButton clicked emit valueSpecialCharPartOne callback
        //Emit callback
        emitValueSpecialCharPartOneCallback(')');
    }
    if (&src == &bracket1FlexButton)
    {
        //getCharBracket1
        //When bracket1FlexButton clicked emit valueSpecialCharPartOne callback
        //Emit callback
        emitValueSpecialCharPartOneCallback('(');
    }
    if (&src == &semicolonFlexButton)
    {
        //getCharSemicolon
        //When semicolonFlexButton clicked emit valueSpecialCharPartOne callback
        //Emit callback
        emitValueSpecialCharPartOneCallback(';');
    }
    if (&src == &colonFlexButton)
    {
        //getCharColon
        //When colonFlexButton clicked emit valueSpecialCharPartOne callback
        //Emit callback
        emitValueSpecialCharPartOneCallback(':');
    }
    if (&src == &slachFlexButton)
    {
        //getCharSlach
        //When slachFlexButton clicked emit valueSpecialCharPartOne callback
        //Emit callback
        emitValueSpecialCharPartOneCallback('/');
    }
    if (&src == &dashFlexButton)
    {
        //getCharDash
        //When dashFlexButton clicked emit valueSpecialCharPartOne callback
        //Emit callback
        emitValueSpecialCharPartOneCallback('-');
    }
    if (&src == &apostrophyFlexButton)
    {
        //getCharApostrophy
        //When apostrophyFlexButton clicked emit valueSpecialCharPartOne callback
        //Emit callback
        emitValueSpecialCharPartOneCallback(39);
    }
    if (&src == &exclammationFlexButton)
    {
        //getCharExclammation
        //When exclammationFlexButton clicked emit valueSpecialCharPartOne callback
        //Emit callback
        emitValueSpecialCharPartOneCallback('!');
    }
    if (&src == &questionFlexButton)
    {
        //getCharQuestion
        //When questionFlexButton clicked emit valueSpecialCharPartOne callback
        //Emit callback
        emitValueSpecialCharPartOneCallback('?');
    }
    if (&src == &commaFlexButton)
    {
        //getCharComma
        //When commaFlexButton clicked emit valueSpecialCharPartOne callback
        //Emit callback
        emitValueSpecialCharPartOneCallback(',');
    }
    if (&src == &periodFlexButton)
    {
        //getCharPeriod
        //When periodFlexButton clicked emit valueSpecialCharPartOne callback
        //Emit callback
        emitValueSpecialCharPartOneCallback('.');
    }
}
