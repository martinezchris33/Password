/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/keyboardSpecialCharPartTwoCustomContainerBase.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

keyboardSpecialCharPartTwoCustomContainerBase::keyboardSpecialCharPartTwoCustomContainerBase() :
    valueSpecialCharPartTwoCallback(0),
    flexButtonCallback(this, &keyboardSpecialCharPartTwoCustomContainerBase::flexButtonCallbackHandler)
{
    setWidth(208);
    setHeight(109);
    periodFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    periodFlexButton.setBitmapXY(0, 0);
    periodFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_PERIOD));
    periodFlexButton.setTextPosition(0, 7, 25, 35);
    periodFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    periodFlexButton.setAction(flexButtonCallback);
    periodFlexButton.setPosition(65, 73, 25, 35);
    add(periodFlexButton);

    commaFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    commaFlexButton.setBitmapXY(0, 0);
    commaFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_COMMA));
    commaFlexButton.setTextPosition(0, 7, 25, 35);
    commaFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    commaFlexButton.setAction(flexButtonCallback);
    commaFlexButton.setPosition(91, 73, 25, 35);
    add(commaFlexButton);

    questionFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    questionFlexButton.setBitmapXY(0, 0);
    questionFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_QUESTION));
    questionFlexButton.setTextPosition(0, 7, 25, 35);
    questionFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    questionFlexButton.setAction(flexButtonCallback);
    questionFlexButton.setPosition(117, 73, 25, 35);
    add(questionFlexButton);

    exclammationFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    exclammationFlexButton.setBitmapXY(0, 0);
    exclammationFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_EXCLAMATION));
    exclammationFlexButton.setTextPosition(0, 7, 25, 35);
    exclammationFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    exclammationFlexButton.setAction(flexButtonCallback);
    exclammationFlexButton.setPosition(143, 73, 25, 35);
    add(exclammationFlexButton);

    apostrophyFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    apostrophyFlexButton.setBitmapXY(0, 0);
    apostrophyFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_APOSTROPHE));
    apostrophyFlexButton.setTextPosition(0, 7, 25, 35);
    apostrophyFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    apostrophyFlexButton.setAction(flexButtonCallback);
    apostrophyFlexButton.setPosition(169, 73, 25, 35);
    add(apostrophyFlexButton);

    hook2FlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    hook2FlexButton.setBitmapXY(0, 0);
    hook2FlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_SQUAREBRACKETL));
    hook2FlexButton.setTextPosition(0, 7, 25, 35);
    hook2FlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    hook2FlexButton.setAction(flexButtonCallback);
    hook2FlexButton.setPosition(0, 0, 25, 35);
    add(hook2FlexButton);

    hook1FlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    hook1FlexButton.setBitmapXY(0, 0);
    hook1FlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_SQUAREBRACKETR));
    hook1FlexButton.setTextPosition(0, 7, 25, 35);
    hook1FlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    hook1FlexButton.setAction(flexButtonCallback);
    hook1FlexButton.setPosition(26, 0, 25, 35);
    add(hook1FlexButton);

    brace2FlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    brace2FlexButton.setBitmapXY(0, 0);
    brace2FlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_BRACESL));
    brace2FlexButton.setTextPosition(0, 7, 25, 35);
    brace2FlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    brace2FlexButton.setAction(flexButtonCallback);
    brace2FlexButton.setPosition(52, 0, 25, 35);
    add(brace2FlexButton);

    hachtagFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    hachtagFlexButton.setBitmapXY(0, 0);
    hachtagFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_POUND));
    hachtagFlexButton.setTextPosition(0, 7, 25, 35);
    hachtagFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    hachtagFlexButton.setAction(flexButtonCallback);
    hachtagFlexButton.setPosition(104, 0, 25, 35);
    add(hachtagFlexButton);

    percentFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    percentFlexButton.setBitmapXY(0, 0);
    percentFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_PERCENT));
    percentFlexButton.setTextPosition(0, 7, 25, 35);
    percentFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    percentFlexButton.setAction(flexButtonCallback);
    percentFlexButton.setPosition(130, 0, 25, 35);
    add(percentFlexButton);

    hatFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    hatFlexButton.setBitmapXY(0, 0);
    hatFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_POWER));
    hatFlexButton.setTextPosition(0, 7, 25, 35);
    hatFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    hatFlexButton.setAction(flexButtonCallback);
    hatFlexButton.setPosition(156, 0, 25, 35);
    add(hatFlexButton);

    starFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    starFlexButton.setBitmapXY(0, 0);
    starFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_STAR));
    starFlexButton.setTextPosition(0, 7, 25, 35);
    starFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    starFlexButton.setAction(flexButtonCallback);
    starFlexButton.setPosition(182, 0, 25, 35);
    add(starFlexButton);

    moreFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    moreFlexButton.setBitmapXY(0, 0);
    moreFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_PLUS));
    moreFlexButton.setTextPosition(0, 7, 25, 35);
    moreFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    moreFlexButton.setAction(flexButtonCallback);
    moreFlexButton.setPosition(157, 37, 25, 35);
    add(moreFlexButton);

    equalFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    equalFlexButton.setBitmapXY(0, 0);
    equalFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_EQUAL));
    equalFlexButton.setTextPosition(0, 7, 25, 35);
    equalFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    equalFlexButton.setAction(flexButtonCallback);
    equalFlexButton.setPosition(183, 37, 25, 35);
    add(equalFlexButton);

    brace1FlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    brace1FlexButton.setBitmapXY(0, 0);
    brace1FlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_BRACESR));
    brace1FlexButton.setTextPosition(0, 7, 25, 35);
    brace1FlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    brace1FlexButton.setAction(flexButtonCallback);
    brace1FlexButton.setPosition(78, 0, 25, 35);
    add(brace1FlexButton);

    dash8FlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    dash8FlexButton.setBitmapXY(0, 0);
    dash8FlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_EMDASH));
    dash8FlexButton.setTextPosition(0, 7, 25, 35);
    dash8FlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    dash8FlexButton.setAction(flexButtonCallback);
    dash8FlexButton.setPosition(1, 37, 25, 35);
    add(dash8FlexButton);

    antiFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    antiFlexButton.setBitmapXY(0, 0);
    antiFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_BACKSLASH));
    antiFlexButton.setTextPosition(0, 7, 25, 35);
    antiFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    antiFlexButton.setAction(flexButtonCallback);
    antiFlexButton.setPosition(27, 37, 25, 35);
    add(antiFlexButton);

    lawFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    lawFlexButton.setBitmapXY(0, 0);
    lawFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_VERTICALBAR));
    lawFlexButton.setTextPosition(0, 7, 25, 35);
    lawFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    lawFlexButton.setAction(flexButtonCallback);
    lawFlexButton.setPosition(53, 37, 25, 35);
    add(lawFlexButton);

    waveFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    waveFlexButton.setBitmapXY(0, 0);
    waveFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_WAVE));
    waveFlexButton.setTextPosition(0, 7, 25, 35);
    waveFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    waveFlexButton.setAction(flexButtonCallback);
    waveFlexButton.setPosition(79, 37, 25, 35);
    add(waveFlexButton);

    arrowRFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    arrowRFlexButton.setBitmapXY(0, 0);
    arrowRFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_SIGNLOW));
    arrowRFlexButton.setTextPosition(0, 7, 25, 35);
    arrowRFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    arrowRFlexButton.setAction(flexButtonCallback);
    arrowRFlexButton.setPosition(105, 37, 25, 35);
    add(arrowRFlexButton);

    arrowLFlexButton.setBitmaps(Bitmap(BITMAP_KEYBOARDBUTTON_ID), Bitmap(BITMAP_KEYBOARDBUTTONPRESSED_ID));
    arrowLFlexButton.setBitmapXY(0, 0);
    arrowLFlexButton.setText(TypedText(T_KEYBOARDCUSTOMCONTAINERTEXT_SIGNMORE));
    arrowLFlexButton.setTextPosition(0, 7, 25, 35);
    arrowLFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(84, 84, 84), touchgfx::Color::getColorFromRGB(84, 84, 84));
    arrowLFlexButton.setAction(flexButtonCallback);
    arrowLFlexButton.setPosition(131, 37, 25, 35);
    add(arrowLFlexButton);
}

keyboardSpecialCharPartTwoCustomContainerBase::~keyboardSpecialCharPartTwoCustomContainerBase()
{

}

void keyboardSpecialCharPartTwoCustomContainerBase::initialize()
{

}

void keyboardSpecialCharPartTwoCustomContainerBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &periodFlexButton)
    {
        //getCharPeriod
        //When periodFlexButton clicked emit valueSpecialCharPartTwo callback
        //Emit callback
        emitValueSpecialCharPartTwoCallback('.');
    }
    if (&src == &commaFlexButton)
    {
        //getCharComma
        //When commaFlexButton clicked emit valueSpecialCharPartTwo callback
        //Emit callback
        emitValueSpecialCharPartTwoCallback(',');
    }
    if (&src == &questionFlexButton)
    {
        //getCharQuestion
        //When questionFlexButton clicked emit valueSpecialCharPartTwo callback
        //Emit callback
        emitValueSpecialCharPartTwoCallback('?');
    }
    if (&src == &exclammationFlexButton)
    {
        //getCharExclammation
        //When exclammationFlexButton clicked emit valueSpecialCharPartTwo callback
        //Emit callback
        emitValueSpecialCharPartTwoCallback('!');
    }
    if (&src == &apostrophyFlexButton)
    {
        //getCharApostrophy
        //When apostrophyFlexButton clicked emit valueSpecialCharPartTwo callback
        //Emit callback
        emitValueSpecialCharPartTwoCallback(39);
    }
    if (&src == &arrowLFlexButton)
    {
        //getCharArrowL
        //When arrowLFlexButton clicked emit valueSpecialCharPartTwo callback
        //Emit callback
        emitValueSpecialCharPartTwoCallback('>');
    }
    if (&src == &arrowRFlexButton)
    {
        //getCharArrowR
        //When arrowRFlexButton clicked emit valueSpecialCharPartTwo callback
        //Emit callback
        emitValueSpecialCharPartTwoCallback('<');
    }
    if (&src == &waveFlexButton)
    {
        //getCharWave
        //When waveFlexButton clicked emit valueSpecialCharPartTwo callback
        //Emit callback
        emitValueSpecialCharPartTwoCallback(126);
    }
    if (&src == &lawFlexButton)
    {
        //getCharLaw
        //When lawFlexButton clicked emit valueSpecialCharPartTwo callback
        //Emit callback
        emitValueSpecialCharPartTwoCallback(124);
    }
    if (&src == &antiFlexButton)
    {
        //getCharAnti
        //When antiFlexButton clicked emit valueSpecialCharPartTwo callback
        //Emit callback
        emitValueSpecialCharPartTwoCallback(92);
    }
    if (&src == &dash8FlexButton)
    {
        //getCharDash8
        //When dash8FlexButton clicked emit valueSpecialCharPartTwo callback
        //Emit callback
        emitValueSpecialCharPartTwoCallback('_');
    }
    if (&src == &equalFlexButton)
    {
        //getCharEqual
        //When equalFlexButton clicked emit valueSpecialCharPartTwo callback
        //Emit callback
        emitValueSpecialCharPartTwoCallback('=');
    }
    if (&src == &moreFlexButton)
    {
        //getCharMore
        //When moreFlexButton clicked emit valueSpecialCharPartTwo callback
        //Emit callback
        emitValueSpecialCharPartTwoCallback('+');
    }
    if (&src == &starFlexButton)
    {
        //getCharStar
        //When starFlexButton clicked emit valueSpecialCharPartTwo callback
        //Emit callback
        emitValueSpecialCharPartTwoCallback('*');
    }
    if (&src == &hatFlexButton)
    {
        //getCharHat
        //When hatFlexButton clicked emit valueSpecialCharPartTwo callback
        //Emit callback
        emitValueSpecialCharPartTwoCallback('^');
    }
    if (&src == &percentFlexButton)
    {
        //getCharPercent
        //When percentFlexButton clicked emit valueSpecialCharPartTwo callback
        //Emit callback
        emitValueSpecialCharPartTwoCallback('%');
    }
    if (&src == &hachtagFlexButton)
    {
        //getCharHachtag
        //When hachtagFlexButton clicked emit valueSpecialCharPartTwo callback
        //Emit callback
        emitValueSpecialCharPartTwoCallback('#');
    }
    if (&src == &brace1FlexButton)
    {
        //getCharBrace1
        //When brace1FlexButton clicked emit valueSpecialCharPartTwo callback
        //Emit callback
        emitValueSpecialCharPartTwoCallback('}');
    }
    if (&src == &brace2FlexButton)
    {
        //getCharBrace2
        //When brace2FlexButton clicked emit valueSpecialCharPartTwo callback
        //Emit callback
        emitValueSpecialCharPartTwoCallback('{');
    }
    if (&src == &hook1FlexButton)
    {
        //getCharHook1
        //When hook1FlexButton clicked emit valueSpecialCharPartTwo callback
        //Emit callback
        emitValueSpecialCharPartTwoCallback(']');
    }
    if (&src == &hook2FlexButton)
    {
        //getCharHook2
        //When hook2FlexButton clicked emit valueSpecialCharPartTwo callback
        //Emit callback
        emitValueSpecialCharPartTwoCallback('[');
    }
}
